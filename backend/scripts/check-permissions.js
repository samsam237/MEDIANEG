#!/usr/bin/env node

/**
 * Script de v√©rification des permissions Strapi
 * Usage: node scripts/check-permissions.js
 */

const strapi = require('@strapi/strapi');

async function checkPermissions() {
  try {
    console.log('üîç V√©rification des permissions Strapi...\n');

    // D√©marrer Strapi
    const app = await strapi().load();
    
    // R√©cup√©rer le r√¥le public
    const publicRole = await strapi.query('plugin::users-permissions.role').findOne({
      where: { type: 'public' }
    });

    if (!publicRole) {
      console.log('‚ùå R√¥le public non trouv√©');
      return;
    }

    console.log(`üìã R√¥le public trouv√© (ID: ${publicRole.id})`);

    // R√©cup√©rer toutes les permissions du r√¥le public
    const permissions = await strapi.query('plugin::users-permissions.permission').findMany({
      where: { role: publicRole.id }
    });

    console.log(`\nüìä Permissions trouv√©es: ${permissions.length}\n`);

    // Grouper par collection
    const collections = {};
    permissions.forEach(permission => {
      const match = permission.action.match(/api::(.+)\.(.+)\.(.+)/);
      if (match) {
        const [, collection, , action] = match;
        if (!collections[collection]) {
          collections[collection] = [];
        }
        collections[collection].push({
          action,
          enabled: permission.enabled
        });
      }
    });

    // Afficher les permissions par collection
    Object.keys(collections).forEach(collection => {
      console.log(`üìÅ ${collection}:`);
      collections[collection].forEach(perm => {
        const status = perm.enabled ? '‚úÖ' : '‚ùå';
        console.log(`  ${status} ${perm.action}`);
      });
      console.log();
    });

    // V√©rifier les collections manquantes
    const expectedCollections = ['presentation', 'plan-action', 'contact-message'];
    const missingCollections = expectedCollections.filter(col => !collections[col]);

    if (missingCollections.length > 0) {
      console.log('‚ö†Ô∏è  Collections sans permissions configur√©es:');
      missingCollections.forEach(col => console.log(`  - ${col}`));
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification :', error);
  } finally {
    process.exit(0);
  }
}

// Ex√©cuter le script
checkPermissions();
