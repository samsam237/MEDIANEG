#!/usr/bin/env node

/**
 * Script de test pour r√©cup√©rer tous les plans d'action (toutes langues)
 * Usage: node scripts/test-all-plans.js
 */

const axios = require('axios');

const API_BASE = 'http://localhost:1337/api';

async function testAllPlans() {
  console.log('üîç Test de r√©cup√©ration de tous les plans d\'action...\n');

  try {
    console.log('üì° Test de l\'API Strapi...');
    const response = await axios.get(`${API_BASE}/plan-actions?sort=year:asc`, { timeout: 5000 });
    
    console.log(`‚úÖ Status: ${response.status}`);
    
    if (response.data && response.data.data) {
      console.log(`üìä R√©sultats: ${response.data.data.length} plan(s) d'action trouv√©(s)`);
      
      if (response.data.data.length > 0) {
        console.log('\nüìã D√©tails des plans:');
        response.data.data.forEach((plan, index) => {
          console.log(`\n${index + 1}. Plan d'action:`);
          console.log(`   - ID: ${plan.id}`);
          console.log(`   - Ann√©e: ${plan.attributes?.year || 'N/A'}`);
          console.log(`   - Titre: ${plan.attributes?.title || 'N/A'}`);
          console.log(`   - Description: ${plan.attributes?.description || 'N/A'}`);
          console.log(`   - Locale: ${plan.attributes?.locale || 'N/A'}`);
          console.log(`   - Publi√©: ${plan.attributes?.publishedAt ? 'Oui' : 'Non'}`);
        });
        
        // Statistiques par langue
        const localeStats = {};
        response.data.data.forEach(plan => {
          const locale = plan.attributes?.locale || 'unknown';
          localeStats[locale] = (localeStats[locale] || 0) + 1;
        });
        
        console.log('\nüìä Statistiques par langue:');
        Object.entries(localeStats).forEach(([locale, count]) => {
          console.log(`   - ${locale.toUpperCase()}: ${count} plan(s)`);
        });
        
      } else {
        console.log('‚ö†Ô∏è  Aucun plan d\'action trouv√©');
      }
    } else {
      console.log('‚ö†Ô∏è  Aucune donn√©e re√ßue');
    }
    
  } catch (error) {
    if (error.response) {
      console.log(`‚ùå Erreur ${error.response.status}: ${error.response.statusText}`);
      if (error.response.data && error.response.data.error) {
        console.log(`üìù D√©tails: ${error.response.data.error.message}`);
      }
    } else {
      console.log(`‚ùå Erreur de connexion: ${error.message}`);
      console.log('üí° V√©rifiez que Strapi est d√©marr√© sur http://localhost:1337');
    }
  }

  console.log('\nüéØ R√©sultat:');
  console.log('‚úÖ L\'API r√©cup√®re maintenant tous les plans d\'action, quelle que soit leur langue');
  console.log('‚úÖ Plus besoin de se soucier des locales sp√©cifiques');
  console.log('‚úÖ La page action-plan devrait maintenant afficher vos donn√©es');
  
  console.log('\nüí° Prochaines √©tapes:');
  console.log('1. V√©rifiez que http://localhost:3000/action-plan affiche maintenant les donn√©es');
  console.log('2. Le composant de debug vous montrera les d√©tails');
  console.log('3. Vous pouvez supprimer le composant de debug une fois que tout fonctionne');
}

// Ex√©cuter le test
testAllPlans().catch(console.error);
